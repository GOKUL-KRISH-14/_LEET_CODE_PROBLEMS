package com.leetcodeproblems.array;

/*
 Given an integer array nums sorted in non-decreasing order, 
 remove some duplicates in-place such that each unique element appears at most twice. 
 The relative order of the elements should be kept the same.
 
Example 1:

Input: nums = [1,1,1,2,2,3]
Output: 5, nums = [1,1,2,2,3,_]
Explanation: Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.
It does not matter what you leave beyond the returned k (hence they are underscores).
 */

import java.util.Arrays;

public class RemoveDuplicatesFromSortedArray 
{
	public static int removeDuplicateFromSorted(int arr[])
	{

		int k=1;
		
		for(int i=1;i<arr.length;i++)
		{
			if(arr[i]!=arr[k-1])
			{
				arr[k]=arr[i];
				k++;
			}
		}
		return k;
	}
	public static void main(String args[])
	{
		int nums[]= {1,1,1,2,2,3};
		int result=removeDuplicateFromSorted(nums);
		System.out.println("\n AFTER REMOVING DUPLICATE ELEMENTS..");
		for(int i=0;i<result;i++)
		{
			System.out.println("\n"+nums[i]);
		}
		
	}

}
